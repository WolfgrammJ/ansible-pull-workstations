###############################################################
# Remmina preparation (Ubuntu)
# !!!Repository currently not maintained!!!
###############################################################
#- name: Add remmina repository from PPA and install its signing key on Ubuntu target
#  ansible.builtin.apt_repository:
#    repo: ppa:remmina-ppa-team/remmina-next


###############################################################
# Package Installation from Repos
###############################################################
- name: Install packages
  ansible.builtin.package:
    name:
      - htop
      - mc
      - neofetch
      - tmux
      - zsh
      - remmina
      - remmina-plugin-exec
      - remmina-plugin-www
#      - remmina-plugin-nx
      - remmina-plugin-kwallet
      - default-jre
      - freerdp2-x11
      - smbclient
      - dolphin-nextcloud
      - dolphin-plugins
      - terminator
      - cifs-utils
      - nfs-common
      - kwrite
      - autofs
      - curl
      - piper #for mouse configuration
      - gimp
      - virtualbox
      - filezilla
      - openvpn
      - yubioath-desktop
      - python3
      - krename
      - kdiff3
      - kdiff3-doc
      - chromium-browser
      - krusader
      - keepassxc
      - webext-keepassxc-browser
      - ncdu

    state: latest


###############################################################
# Install Brave browser (Ubuntu)
# Needs to run after curl is installed
###############################################################
- name: Add PGP key and repository for Brave (Ubuntu)
  become: yes
  raw: |
    curl -fsSLo /usr/share/keyrings/brave-browser-archive-keyring.gpg https://brave-browser-apt-release.s3.brave.com/brave-browser-archive-keyring.gpg
    echo "deb [signed-by=/usr/share/keyrings/brave-browser-archive-keyring.gpg] https://brave-browser-apt-release.s3.brave.com/ stable main"|sudo tee /etc/apt/sources.list.d/brave-browser-release.list

- name: Update repositories cache (Ubuntu)
  apt:
    update_cache: yes
    allow_unauthenticated: yes

- name: Install Brave package
  ansible.builtin.package:
    name:
      - brave-browser
    state: latest


###############################################################
# Syncthing preparation (Ubuntu)
# Needs to run after curl is installed
###############################################################
#- name: Add PGP key and repository for syncthing (Ubuntu)
#  become: yes
#  raw: |
#    curl -o /usr/share/keyrings/syncthing-archive-keyring.gpg https://syncthing.net/release-key.gpg
#    echo "deb [signed-by=/usr/share/keyrings/syncthing-archive-keyring.gpg] https://apt.syncthing.net/ syncthing stable" | sudo tee /etc/apt/sources.list.d/syncthing.list

#- name: Update repositories cache (Ubuntu)
#  apt:
#    update_cache: yes
#    allow_unauthenticated: yes


###############################################################
# Syncthing Installation (Ubuntu)
# Needs to run after curl is installed
###############################################################
#- name: Install Syncthing
#  ansible.builtin.package:
#    name:
#      - syncthing
#    state: latest



###############################################################
# Install additional software
###############################################################
### VMware Workstation Pro: check if installed and register var
- name: Check if VMware Workstation Pro is installed
  stat:
    path: /usr/share/applications/vmware-workstation.desktop
  register: vmwareworkstationpro

### VMware Workstation Pro: Installation
- name: Download VMware Workstation Pro
  become: yes
  get_url:
    url: https://www.vmware.com/go/getworkstation-linux
    dest: /usr/VMWare-Workstation-Full.x86_64.bundle
  register: vmware_download
  ignore_errors: true
  when: not vmwareworkstationpro.stat.exists

- name: Debug Message VMWare
  debug:
    msg: {{ vmware_download.stdout }}

- name: Install VMware Workstation Pro
  become: yes
#  shell: |
#    sh ./VMWare-Workstation-Full.x86_64.bundle --console --deferred-gtk
#    /usr/bin/vmware-modconfig --console --install-all
  shell: |
    sh ./VMWare-Workstation-Full.x86_64.bundle --console --deferred-gtk
  args:
    chdir: /usr
#    creates: /usr/share/applications/vmware-workstation.desktop
  when: not vmwareworkstationpro.stat.exists

- name: Delete VMware Workstation Pro installation files
  become: yes
  ansible.builtin.file:
    path: /usr/VMWare-Workstation-Full.x86_64.bundle
    state: absent


### Vivaldi Browser
- name: Install Vivaldi Browser
  become: yes
  apt:
    deb: https://downloads.vivaldi.com/stable/vivaldi-stable_6.4.3160.34-1_amd64.deb
  ignore_errors: yes

### Netextender: check if installed and register var
- name: Check if NetExtender is installed
  stat:
    path: /usr/bin/netExtenderGui
  register: netextender

### NetExtender: Installation and permissions
- name: Download NetExtender version 10.2.845
  become_user: "root"
  get_url:
    url: https://software.sonicwall.com/NetExtender/NetExtender.Linux-10.2.845.x86_64.tgz
    dest: /tmp/NetExtender.Linux.tgz
  when: not netextender.stat.exists

- name: Extract NetExtender archive
  become_user: "root"
  ansible.builtin.unarchive:
    src: /tmp/NetExtender.Linux.tgz
    dest: /tmp/
  when: not netextender.stat.exists

- name: Install NetExtender
  become: yes
  shell: ./install
  args:
    chdir: /tmp/netExtenderClient/
    creates: /usr/bin/netExtenderGui
  when: not netextender.stat.exists

- name: Delete Netextender installation files (1/2)
  become: yes
  ansible.builtin.file:
    path: /tmp/NetExtender.Linux.tgz
    state: absent

- name: Delete Netextender installation files (1/2)
  become: yes
  ansible.builtin.file:
    path: /tmp/netExtenderClient
    state: absent

- name: Set NetExtender Permissions 1
  ansible.builtin.file:
    path: /usr/sbin/pppd
    state: file
    mode: '4755'

- name: Set NetExtender Permissions 2
  ansible.builtin.file:
    path: /etc/ppp/peers
    state: directory
    mode: '2755'

- name: Set NetExtender Permissions 3 (Ubuntu)
  ansible.builtin.file:
    path: /etc/ppp/peers/provider
    state: file
    mode: '0644'

- name: Set NetExtender Permissions4
  ansible.builtin.file:
    path: /etc/ppp/peers
    state: directory
    mode: '2755'
